
***Codigo para iniciar las tablas****************************************************************************
CREATE TABLE producto(idProducto INT(20), producto VARCHAR(20), precio DOUBLE);
CREATE TABLE factura(sucursal VARCHAR(20), prIDFactura INT(20), userIDFactura INT(20));
CREATE TABLE detalle(id BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT, precioU DOUBLE, cantidad INT(20), proIDDetalle INT(20), userIDDetalle INT(20));
CREATE TABLE cliente(id BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT, nombre VARCHAR(20), apellido VARCHAR(20), fechaN DATE, userID INT(20));


***Codigo para cargar los datos desde consola MariaDB********************************************************
LOAD DATA LOCAL INFINE "ruta del documento.txt" INTO TABLE nombreTabla FIELDS TERMINATED BY ',' LINES TERMINATED BY '\r\n';


***Codigo para eliminar tabla en rango con BETWEEN***********************************************************
DELETE FROM nombreTabla WHERE campo BETWEEN dato AND dato;


***Ejemplo de procedimiento almacenado***********************************************************************
CREATE PROCEDURE saveProducto(idProducto INT(20), producto VARCHAR(20), precio DOUBLE) INSERT INTO producto(idProducto, producto, precio) VALUES(idProducto, producto, precio);
CREATE PROCEDURE saveFactura(sucursal VARCHAR(20), prIDFactura INT(20), userIDFactura INT(20)) INSERT INTO factura(sucursal, prIDFactura, userIDFactura) VALUES(sucursal, prIDFactura, userIDFactura);
CREATE PROCEDURE saveDetalle(precioU DOUBLE, cantidad INT(20), proIDDetalle INT(20), userIDDetalle INT(20)) INSERT INTO detalle(precioU, cantidad, proIDDetalle, userIDDetalle) VALUES(precioU, cantidad, proIDDetalle, userIDDetalle); 
CREATE PROCEDURE saveCliente(nombre VARCHAR(20), apellido VARCHAR(20), fechaN DATE, userID INT(20)) INSERT INTO cliente(nombre, apellido, fechaN, userID) VALUES(nombre, apellido, fechaN, userID); 


***Llamamos el procedimiento almacenado
CALL saveProducto(9,"kiwi",0.40);
CALL saveFactura(9,"kiwi",0.40);
CALL saveDetalle(9,"kiwi",0.40);
CALL saveCliente(9,"kiwi",0.40);


***Mostrar el procedimiento almacenado:
SHOW PROCEDURE STATUS WHERE Db = "nombre de Database"\G;











